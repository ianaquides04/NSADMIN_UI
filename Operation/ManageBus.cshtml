@{
    ViewData["Title"] = "ManageBus";
}

<style>
    body {
        background-color: #f8f9fa;
    }
    .custom-header {
        background-color: #283233;
        color: #fff;
    }

    .btn-save {
        background-color: #1cb5bd !important;
        border: none !important;
        color: #fff !important;
        font-weight: 500;
        border-radius: 4px;
    }

        .btn-save:hover {
            background-color: #15989f !important;
            color: #fff !important;
        }

    .btn-outline-save {
        color: #1cb5bd !important;
        border: 1px solid #1cb5bd !important;
        background-color: #fff !important;
        font-weight: 500;
        border-radius: 4px;
    }

        .btn-outline-save:hover {
            background-color: #e6f7f8 !important;
            color: #1cb5bd !important;
        }

    .form-control {
        border-radius: 4px;
        height: 45px;
    }

    .border {
        border: 1px solid #ccc !important;
        border-radius: 4px !important;
    }

    .radio-label {
        margin-left: 8px;
    }

    .dimmed {
        opacity: 0.3;
        pointer-events: none;
    }

    .btn-delete {
        background-color: #ff4141 !important;
        border: none !important;
        color: #fff !important;
        font-weight: 500;
        border-radius: 4px;
    }

        .btn-delete:hover {
            background-color: #e63936 !important;
            color: #fff !important;
        }

    .btn-outline-delete {
        color: #1cb5bd !important;
        border: 1px solid #1cb5bd !important;
        background-color: #fff !important;
        font-weight: 500;
        border-radius: 4px;
    }

        .btn-outline-delete:hover {
            background-color: #e6f7f8 !important;
            color: #1cb5bd !important;
        }
</style>

<div class="head-title">
    <div class="left">
        <h1>Operations</h1>
        <ul class="breadcrumb">
            <li><a href="#">Operations</a></li>
            <li><i class='bx bx-chevron-right'></i></li>
            <li><a class="active2" asp-controller="Operation" asp-action="Operations">Home</a></li>
            <li><i class='bx bx-chevron-right'></i></li>
            <li><a class="active1" href="#">Manage Busses</a></li>
        </ul>
    </div>
</div>

<div style="margin: 20px;">
    <div class="datalbl">
        <asp:Label> <h5>Bus List</h5></asp:Label>
        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#bussesModal">
            <i class='bx bx-add-to-queue'></i>
            <span>Add Bus</span>
        </button>
    </div>

    @model List<NextStop_AdminMVC.Models.DataModels.Bus>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <button class="sortbtn">
                            <a class="sortlbl" asp-action="ManageBus" asp-route-sortOrder="@ViewData["IndexSort"]">
                                # <i class='bx bxs-sort-alt'></i>
                            </a>
                        </button>
                    </th>
                    <th>
                        <button class="sortbtn">
                            <a class="sortlbl" asp-action="ManageBus" asp-route-sortOrder="@ViewData["NameSort"]">
                                Plate Number <i class='bx bxs-sort-alt'></i>
                            </a>
                        </button>
                    </th>
                    <th>Capacity</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>

            @if (Model != null && Model.Count > 0)
            {
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <tr>
                            <td>@Model[i].Id</td>
                            <td>@Model[i].PlateNum</td>
                            <td>@Model[i].Capacity</td>
                            <td>@Model[i].Status</td>
                            <td>
                                <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#UpdatebussesModal-@Model[i].Id">
                                    <i class='bx bxs-edit'></i>
                                </button>

                                <button class="btn btn-danger btn-sm"  data-bs-toggle="modal" data-bs-target="#deleteConfirmModal">
                                <i class='bx bxs-x-square'></i></button>

                            </td>
                        </tr>
                    }
                </tbody>
            }
            else
            {
                <tbody>
                    <tr><td colspan="7" style="text-align: center;">No bus available.</td></tr>
                </tbody>
            }
        </table>
    </div>
</div>


@if (Model != null && Model.Count > 0)
{
    @foreach (var bus in Model)
    {
        <!-- Update Bus Modal -->
        <div class="modal fade" id="UpdatebussesModal-@bus.Id" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header custom-header">
                        <h4 class="modal-title">Update Bus</h4>
                    </div>

                    <div class="modal-body">
                        <form id="UpdateBusForm-@bus.Id">
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label">Plate Number</label>
                                    <input type="text" class="form-control mb-3" value="@bus.PlateNum" />

                                    <div class="d-flex justify-content-between align-items-center">
                                        <label class="form-label mb-0">Capacity</label>
                                        <div class="form-check d-flex align-items-center ms-2">
                                            <input type="checkbox" class="form-check-input me-2" id="notSpecified-@bus.Id" />
                                            <label for="notSpecified-@bus.Id" class="form-check-label">Not Specified</label>
                                        </div>
                                    </div>
                                    <input type="text" class="form-control mt-2" id="capacityInput-@bus.Id" value="@bus.Capacity" />
                                </div>

                                <div class="col-md-6">
                                    <label class="form-label">Status</label>
                                    <div class="border rounded p-3">
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="radio" name="status-@bus.Id" id="available-@bus.Id" @(bus.Status == "Available" ? "checked" : "")>
                                            <label class="form-check-label radio-label" for="available-@bus.Id">Available</label>
                                        </div>
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="radio" name="status-@bus.Id" id="onRoute-@bus.Id" @(bus.Status == "On Route" ? "checked" : "")>
                                            <label class="form-check-label radio-label" for="onRoute-@bus.Id">On Route</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="status-@bus.Id" id="maintenance-@bus.Id" @(bus.Status == "Maintenance" ? "checked" : "")>
                                            <label class="form-check-label radio-label" for="maintenance-@bus.Id">Maintenance</label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex justify-content-end gap-2 mt-4">
                                <button type="button" class="btn btn-save text-white px-4" data-bs-toggle="modal" data-bs-target="#ConfirmUpdateModal-@bus.Id">Save</button>
                                <button type="button" class="btn btn-outline-save px-4" data-bs-dismiss="modal">Cancel</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Confirm Update Modal (made unique per bus) -->
        <div class="modal fade" id="ConfirmUpdateModal-@bus.Id" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
            <div class="modal-dialog modal-dialog-centered" style="max-width:500px;">
                <div class="modal-content p-4 text-start">
                    <h5 class="mb-4">Update Bus?</h5>
                    <div class="d-flex justify-content-end gap-3">
                        <button type="button" class="btn btn-save text-white px-4" data-bs-dismiss="modal">Save</button>
                        <button type="button" class="btn btn-outline-save px-4" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

<!-- Add Bus Modal -->
<div class="modal fade" id="bussesModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header custom-header">
                <h4 class="modal-title">Bus</h4>
            </div>

            <div class="modal-body">
                <form id="bussesForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Plate Number</label>
                            <input type="text" id="plateNumberInput" class="form-control mb-3" />

                            <div class="d-flex justify-content-between align-items-center">
                                <label class="form-label mb-0">Capacity</label>
                                <div class="form-check d-flex align-items-center ms-2">
                                    <input type="checkbox" class="form-check-input me-2" id="notSpecified" />
                                    <label for="notSpecified" class="form-check-label">Not Specified</label>
                                </div>
                            </div>
                            <input type="text" class="form-control mt-2" id="capacityInput" />
                        </div>

                        <div class="col-md-6">
                            <label class="form-label">Status</label>
                            <div class="border rounded p-3">
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="status" id="available">
                                    <label class="form-check-label radio-label" for="available">Available</label>
                                </div>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="status" id="onRoute">
                                    <label class="form-check-label radio-label" for="onRoute">On Route</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="status" id="maintenance">
                                    <label class="form-check-label radio-label" for="maintenance">Maintenance</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Buttons -->
                    <div class="d-flex justify-content-end gap-2 mt-4">
                        <button type="button" id="saveBtn" class="btn btn-save text-white px-4">Save</button>
                        <button type="button" id="cancelBtn" class="btn btn-outline-save px-4" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Save Confirmation Modal -->
<div class="modal fade" id="saveConfirmModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" style="max-width:500px;">
        <div class="modal-content p-4 text-start">
            <h5 class="mb-4">Save Bus?</h5>
            <div class="d-flex justify-content-end gap-3">
                <button type="button" id="confirmSaveBtn" class="btn btn-save text-white px-4">Save</button>
                <button type="button" id="confirmCancelBtn" class="btn btn-outline-save px-4">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Verification Modal -->
<div class="modal fade" id="verificationModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width:500px;">
        <div class="modal-content p-4 text-start">
            <h5 class="mb-4 text-danger">Error: Bus Name already exist.</h5>
            <div class="d-flex justify-content-end">
                <button type="button" id="verificationOkBtn" class="btn btn-outline-save px-4">Ok</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" style="max-width:500px;">
        <div class="modal-content p-4 text-start">
            <h5 class="mb-4">Delete Bus?</h5>
            <div class="d-flex justify-content-end gap-3">
                <button type="submit" form="createRouteForm" class="btn btn-delete text-white px-4">Delete</button>
                <button type="button" class="btn btn-outline-delete px-4" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {

            // Initialize base modals
            const bussesModalEl = document.getElementById('bussesModal');
            const saveConfirmModalEl = document.getElementById('saveConfirmModal');
            const verificationModalEl = document.getElementById('verificationModal');

            const bussesModal = new bootstrap.Modal(bussesModalEl, { backdrop: 'static', keyboard: false });
            const saveConfirmModal = new bootstrap.Modal(saveConfirmModalEl, { backdrop: 'static', keyboard: false });
            const verificationModal = new bootstrap.Modal(verificationModalEl, { backdrop: 'static', keyboard: false });

            const saveBtn = document.getElementById('saveBtn');
            const confirmSaveBtn = document.getElementById('confirmSaveBtn');
            const confirmCancelBtn = document.getElementById('confirmCancelBtn');
            const verificationOkBtn = document.getElementById('verificationOkBtn');

            // Added: Proper reference for Plate Number input instead of busNameInput
            const plateNumberInput = document.getElementById('plateNumberInput');

            const notSpecifiedCheckbox = document.getElementById('notSpecified');
            const capacityInput = document.getElementById('capacityInput');

            // FIX: Save button logic (Add Bus)
            saveBtn.addEventListener('click', () => {
                const plateNum = plateNumberInput.value.trim();

                // Error verification popup logic (placeholder for future)
                // if (plateNum already exists in database) { show verificationModal }

                if (plateNum === ".") {
                    bussesModalEl.classList.add('dimmed');
                    verificationModal.show();
                } else {
                    bussesModal.hide();
                    saveConfirmModal.show();
                }
            });

            // FIX: Verification OK button
            verificationOkBtn.addEventListener('click', () => {
                verificationModal.hide();
                bussesModalEl.classList.remove('dimmed');
            });

            // FIX: Confirm Save
            confirmSaveBtn.addEventListener('click', () => {
                saveConfirmModal.hide();
                bussesModal.show();
                // Add backend save logic here if needed
            });

            // FIX: Confirm Cancel
            confirmCancelBtn.addEventListener('click', () => {
                saveConfirmModal.hide();
                bussesModal.show();
            });

            // FIX: Capacity disable logic for Add Bus
            notSpecifiedCheckbox.addEventListener('change', () => {
                capacityInput.disabled = notSpecifiedCheckbox.checked;
            });
            capacityInput.disabled = notSpecifiedCheckbox.checked;
        });
    </script>

    <script>
        document.querySelectorAll('[id^="UpdatebussesModal-"]').forEach((modalEl) => {
            const id = modalEl.id.split('-')[1];

            const updateBusModalEl = document.getElementById('UpdatebussesModal-' + id);
            const confirmUpdateModalEl = document.getElementById('ConfirmUpdateModal-' + id);
            const capacityInput = document.getElementById('capacityInput-' + id);
            const notSpecifiedCheckbox = document.getElementById('notSpecified-' + id);

            if (!updateBusModalEl || !confirmUpdateModalEl) return;

            // Initialize modals with static backdrop
            const updateBusModal = new bootstrap.Modal(updateBusModalEl, { backdrop: 'static', keyboard: false });
            const confirmUpdateModal = new bootstrap.Modal(confirmUpdateModalEl, { backdrop: 'static', keyboard: false });

            // Save & Cancel buttons inside Update modal
            const saveBtn = updateBusModalEl.querySelector('[data-bs-target="#ConfirmUpdateModal-' + id + '"]');
            const cancelBtn = updateBusModalEl.querySelector('[data-bs-dismiss="modal"]');

            // Buttons inside Confirm Update modal
            const confirmSaveBtn = confirmUpdateModalEl.querySelector('.btn-save.text-white');
            const confirmCancelBtn = confirmUpdateModalEl.querySelector('.btn-outline-save');

            // FIX: Save button logic (Update -> Confirm)
            if (saveBtn) {
                saveBtn.addEventListener('click', function () {
                    updateBusModal.hide();
                    confirmUpdateModal.show();
                });
            }

            // FIX: Confirm Cancel (Confirm -> reopen Update)
            if (confirmCancelBtn) {
                confirmCancelBtn.addEventListener('click', function () {
                    confirmUpdateModal.hide();
                    updateBusModal.show();
                });
            }

            // FIX: Cancel button (Update modal)
            if (cancelBtn) {
                cancelBtn.addEventListener('click', function () {
                    updateBusModal.hide();
                });
            }

            // FIX: Confirm Save (close confirmation)
            if (confirmSaveBtn) {
                confirmSaveBtn.addEventListener('click', function () {
                    confirmUpdateModal.hide();
                    // Add backend update logic here
                });
            }

            // FIX: Capacity disable logic for Update Bus
            if (notSpecifiedCheckbox && capacityInput) {
                notSpecifiedCheckbox.addEventListener('change', () => {
                    capacityInput.disabled = notSpecifiedCheckbox.checked;
                });
                capacityInput.disabled = notSpecifiedCheckbox.checked;
            }

            // Comment placeholder for Error Verification Popup logic
            // Example:
            // if (plateNum already exists) {
            //     updateBusModalEl.classList.add('dimmed');
            //     verificationModal.show();
            // }
        });
    </script>

